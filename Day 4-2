//Day 4/100
//Problem - Valid Palindrome (Easy)
//Problem Code on Leetcode - 125
//Approach - (1) Building Reverse and Original String Form Simultaneously and Comparing Both 
//           (2) Using Stack
//Time Complexity - O(n)
//Space Complexity - O(n)

//Approach 1 - JAVA Code

class Solution {
    public boolean isPalindrome(String s) {
        s=s.toLowerCase();
        String w="",rev_w="";
        int l=s.length();
        for(int i=0;i<l;i++)
        {
            char ch=s.charAt(i); 
            if((int)ch>=97 && (int)ch<=122 || Character.getNumericValue(ch)>=0 && Character.getNumericValue(ch)<=9)
            {
                w=w+ch;
                rev_w=ch+rev_w;
            }
        }
       if(w.equals(rev_w))
       {
           return true;
       }
        return false;
    }
}

//Approach 2 - JAVA Code

class Solution {
    public boolean isPalindrome(String s) {
       Stack<Character> stack=new Stack();
        for(int i=0;i<s.length();i++)
        {
            if(Character.isLetterOrDigit(s.charAt(i)))
            {
                stack.push(s.charAt(i));
            }
        }
        String string="",reverse="";
        for(Character character:stack)
        {
            string+=Character.toLowerCase(character);
        }
        while(!stack.isEmpty())
        {
            reverse+=Character.toLowerCase(stack.pop());
        }
        return string.equals(reverse);
    }
}
