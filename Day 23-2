//Day 23/100
//Problem - Majority Element II (Medium)
//Platform - Leetcode
//Problem Code on Leetcode - 229
//Approach - Using HashMap
//Time Complexity - O(n)
//Space Complexity - O(n)

//JAVA Code :-

class Solution {
    public List<Integer> majorityElement(int[] nums) {
        List<Integer> list=new ArrayList<>();
        HashMap<Integer,Integer> map=new HashMap<>();
        for(int i=0;i<nums.length;i++)
        {
            if(map.containsKey(nums[i]))
            {
                map.put(nums[i],map.get(nums[i])+1);
            }
            else
            {
                map.put(nums[i],1);
            }
        }
        for(int i=0;i<nums.length;i++)
        {
            if(map.get(nums[i])>nums.length/3)
            {
                list.add(nums[i]);
                map.put(nums[i],0);
            }
        }
        return list;
    }
}
