//Day 9/100
//Problem - Remove Linked List Elements (Easy)
//Platform - Leetcode
//Problem Code on Leetcode - 203
//Approach - Using Previous and Current Pointers To Locate and Eliminate Target Element From The List
//Time Complexity - O(n)
//Space Complexity - O(1)

//JAVA Code :-

/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode removeElements(ListNode head, int val) {
        if(head==null)
        {
            return null;
        }
        while(head!=null && head.val==val)
        {
            head=head.next;
        }
        if(head==null)
        {
            return null;
        }
        ListNode prev=head;    
        ListNode curr=prev.next;
        while(curr!=null)
        {
            if(curr.val==val)
            {
                curr=curr.next;
            }
            else if(curr.val!=val)
            {
                prev.next=curr;
                curr=curr.next;
                prev=prev.next;
            }
        }
        prev.next=null;
        return head;
    }
}
